stages:
  - test
  - build
  - deploy_dev
  - deploy_qa
  - deploy_staging
  - deploy_prod

variables:
  DOCKERHUB_REPO_PREFIX: "tijusjason"
  IMAGE_TAG: $CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

image:
  name: "python:3.11-alpine"
  entrypoint: ["/bin/sh", "-c"]

test:
  stage: test
  image: python:3.9-slim-buster
  before_script:
    - apt-get update && apt-get install -y gcc libc-dev
    - pip install --upgrade pip
    - cd users
    - pip install -r requirements.txt
  script:
    - cd tests
    - python3 -m unittest


# Stage de Build
build:
  stage: build
  script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin  # Log in to Docker Hub
    - docker build -t ${DOCKERHUB_REPO_PREFIX}/gateway:$IMAGE_TAG ./gateway/
    - docker push ${DOCKERHUB_REPO_PREFIX}/gateway:$IMAGE_TAG
    - docker build -t ${DOCKERHUB_REPO_PREFIX}/users:$IMAGE_TAG ./users/
    - docker push ${DOCKERHUB_REPO_PREFIX}/users:$IMAGE_TAG
    - docker build -t ${DOCKERHUB_REPO_PREFIX}/orders:$IMAGE_TAG ./orders/
    - docker push ${DOCKERHUB_REPO_PREFIX}/orders:$IMAGE_TAG

# Template de d√©ploiement Helm
.deploy_template: &deploy_template
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - helm upgrade --install ${CI_PROJECT_NAME}-${KUBE_NAMESPACE} ./gitlab_helm
      --namespace $KUBE_NAMESPACE
      --set gateway.image=$DOCKERHUB_REPO_PREFIX/gateway:$IMAGE_TAG
      --set users.image=$DOCKERHUB_REPO_PREFIX/users:$IMAGE_TAG
      --set orders.image=$DOCKERHUB_REPO_PREFIX/orders:$IMAGE_TAG
      --set imagePullSecrets[0].name=regcred
      #--set global.imagePullSecrets=dockerhub

deploy_dev:
  <<: *deploy_template
  stage: deploy_dev
  variables:
    KUBE_NAMESPACE: dev

deploy_qa:
  <<: *deploy_template
  stage: deploy_qa
  variables:
    KUBE_NAMESPACE: qa

deploy_staging:
  <<: *deploy_template
  stage: deploy_staging
  variables:
    KUBE_NAMESPACE: staging

deploy_prod:
  <<: *deploy_template
  stage: deploy_prod
  variables:
    KUBE_NAMESPACE: prod
  when: manual
  only:
    - main
